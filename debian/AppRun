#!/bin/sh
set -e

CURRENTDIR="$(dirname "$(readlink -f "$0")")"

# wayland doesn't work
export QT_QPA_PLATFORM=xcb

if [ ! -f "/etc/udev/rules.d/53-adi-m1k-usb.rules" ]; then
	echo "/etc/udev/rules.d/53-adi-m1k-usb.rules file not found!"
	echo "Ignore if udev is not supported by your system"
	echo "To fix this, rerun this command with --getudev"
	notify-send -u critical "/etc/udev/rules.d/53-adi-m1k-usb.rules file not found! To fix this, rerun this command with --getudev for the first time when setting up" || true # Send a user prompt but ignore errors, in case it doesn't exist
fi

if [ "$1" = '--getudev' ]; then
	if [ -f "/etc/udev/rules.d/53-adi-m1k-usb.rules" ]; then
		echo "udev rule already found, skipping Rule Creation"
	else
		# Create udev rule file
		if command -v sudo >/dev/null 2>&1; then
			SUDOCMD="sudo"
		elif command -v doas >/dev/null 2>&1; then
			SUDOCMD="doas"
		else
			echo "ERROR: You need sudo or doas to use this function"
			exit 1
		fi
		echo "Adding New udev Rule"
		"$SUDOCMD" mkdir -p /etc/udev/rules.d/
		cat <<- 'EOF' | "$SUDOCMD" tee /etc/udev/rules.d/53-adi-m1k-usb.rules
		# allow "plugdev" group read/write access to ADALM1000 devices
		SUBSYSTEM=="usb", ATTRS{idVendor}=="064b", ATTRS{idProduct}=="784c", MODE="0664", GROUP="plugdev", TAG+="uaccess"
		# allow "plugdev" group read/write access to ADALM1000 devices in SAM-BA mode
		SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="6124", MODE="0664", GROUP="plugdev", TAG+="uaccess"
		EOF
		"$SUDOCMD" udevadm control --reload-rules
		echo "Udev rules successfully created"
	fi
fi

# Continue with application execution
exec "$CURRENTDIR"/bin/pixelpulse2 "$@"
